{
  "env": {
    "es6": true,
    "node": true,
    "mocha": true
  },
  "parserOptions": {
    "ecmaVersion": 2017,
    "sourceType": "module"
  },
  "globals": {
    "__ROOT_FOLDER__": false,
    "__PRODUCTION__": false,
    "__DEVELOPMENT__": false,
    "__DISABLE_SSR__": false,
    "__SERVER__": false,
    "__CLIENT__": false,
    "__API_BASE__": false,
    "_env": false
  },
  "rules": {
    ////////// Possible Errors //////////
    "comma-dangle": [
      "error",
      "never"
    ], // http://eslint.org/docs/rules/comma-dangle
    "no-cond-assign": "warn", // http://eslint.org/docs/rules/no-cond-assign
    "no-constant-condition": "warn", // http://eslint.org/docs/rules/no-constant-condition
    "no-control-regex": "error", // http://eslint.org/docs/rules/no-control-regex
    "no-debugger": "error", // http://eslint.org/docs/rules/no-debugger
    "no-dupe-args": "error", // http://eslint.org/docs/rules/no-dupe-args
    "no-dupe-keys": "error", // http://eslint.org/docs/rules/no-dupe-keys
    "no-duplicate-case": "error", // http://eslint.org/docs/rules/no-duplicate-case
    "no-empty": "error", // http://eslint.org/docs/rules/no-empty
    "no-empty-character-class": "error", // http://eslint.org/docs/rules/no-empty-character-class
    "no-ex-assign": "error", // http://eslint.org/docs/rules/no-ex-assign
    "no-extra-boolean-cast": "error", // http://eslint.org/docs/rules/no-extra-boolean-cast
    "no-extra-parens": [
      "off",
      "all",
      { // http://eslint.org/docs/rules/no-extra-parens
        "conditionalAssign": true,
        "nestedBinaryExpressions": false,
        "returnAssign": false
      }
    ],
    "no-extra-semi": "error", // http://eslint.org/docs/rules/no-extra-semi
    "no-func-assign": "error", // http://eslint.org/docs/rules/no-func-assign
    "no-inner-declarations": "error", // http://eslint.org/docs/rules/no-inner-declarations
    "no-invalid-regexp": "error", // http://eslint.org/docs/rules/no-invalid-regexp
    "no-irregular-whitespace": "error", // http://eslint.org/docs/rules/no-irregular-whitespace
    "no-obj-calls": "error", // http://eslint.org/docs/rules/no-obj-calls
    "no-prototype-builtins": "error", // http://eslint.org/docs/rules/no-prototype-builtins
    "no-regex-spaces": "error", // http://eslint.org/docs/rules/no-regex-spaces
    "no-sparse-arrays": "error", // http://eslint.org/docs/rules/no-sparse-arrays
    "no-template-curly-in-string": "error", // http://eslint.org/docs/rules/no-template-curly-in-string
    "no-unexpected-multiline": "error", // http://eslint.org/docs/rules/no-unexpected-multiline
    "no-unreachable": "error", // http://eslint.org/docs/rules/no-unreachable
    "no-unsafe-finally": "error", // http://eslint.org/docs/rules/no-unsafe-finally
    "no-negated-in-lhs": "off", // http://eslint.org/docs/rules/no-negated-in-lhs
    "use-isnan": "error", // http://eslint.org/docs/rules/use-isnan
    "valid-jsdoc": "error", // http://eslint.org/docs/rules/valid-jsdoc
    "valid-typeof": [
      "error",
      { // http://eslint.org/docs/rules/valid-typeof
        "requireStringLiterals": true
      }
    ],
    ////////// Best Practices //////////
    "accessor-pairs": "off", // http://eslint.org/docs/rules/accessor-pairs
    "array-callback-return": "error", // http://eslint.org/docs/rules/array-callback-return
    "block-scoped-var": "error", // http://eslint.org/docs/rules/block-scoped-var
    "complexity": [
      "off",
      11
    ], // http://eslint.org/docs/rules/complexity
    "class-methods-use-this": [
      "error",
      { // http://eslint.org/docs/rules/class-methods-use-this
        "exceptMethods": [
          "render",
          "getInitialState",
          "getDefaultProps",
          "getChildContext",
          "componentWillMount",
          "componentDidMount",
          "componentWillReceiveProps",
          "shouldComponentUpdate",
          "componentWillUpdate",
          "componentDidUpdate"
        ]
      }
    ],
    "consistent-return": "error", // http://eslint.org/docs/rules/consistent-return
    "curly": [
      "error",
      "all"
    ], // http://eslint.org/docs/rules/curly
    "default-case": [
      "error",
      { // http://eslint.org/docs/rules/default-case
        "commentPattern": "^no default$"
      }
    ],
    "dot-notation": [
      "error",
      { // http://eslint.org/docs/rules/dot-notation
        "allowKeywords": true
      }
    ],
    "dot-location": [
      "error",
      "property"
    ], // http://eslint.org/docs/rules/dot-location
    "eqeqeq": [
      "error",
      "allow-null"
    ], // http://eslint.org/docs/rules/eqeqeq
    "guard-for-in": "error", // http://eslint.org/docs/rules/guard-for-in
    "no-alert": "warn", // http://eslint.org/docs/rules/no-alert
    "no-caller": "error", // http://eslint.org/docs/rules/no-caller
    "no-case-declarations": "error", // http://eslint.org/docs/rules/no-case-declarations
    "no-div-regex": "off", // http://eslint.org/docs/rules/no-div-regex
    "no-else-return": "error", // http://eslint.org/docs/rules/no-else-return
    "no-eq-null": "error", // http://eslint.org/docs/rules/no-eq-null
    "no-eval": "error", // http://eslint.org/docs/rules/no-eval
    "no-extend-native": "error", // http://eslint.org/docs/rules/no-extend-native
    "no-extra-bind": "error", // http://eslint.org/docs/rules/no-extra-bind
    "no-extra-label": "error", // http://eslint.org/docs/rules/no-extra-label
    "no-fallthrough": "error", // http://eslint.org/docs/rules/no-fallthrough
    "no-floating-decimal": "error", // http://eslint.org/docs/rules/no-floating-decimal
    "no-global-assign": [
      "error",
      { // http://eslint.org/docs/rules/no-global-assign
        "exceptions": []
      }
    ],
    "no-native-reassign": "off", // http://eslint.org/docs/rules/no-native-reassign
    "no-implicit-coercion": [
      "error"
    ], // http://eslint.org/docs/rules/no-implicit-coercion
    "no-implicit-globals": "off", // http://eslint.org/docs/rules/no-implicit-globals
    "no-implied-eval": "error", // http://eslint.org/docs/rules/no-imlied-eval
    "no-invalid-this": "off", // http://eslint.org/docs/rules/no-invalid-this
    "no-iterator": "error", // http://eslint.org/docs/rules/no-iterator
    "no-labels": [
      "error",
      { // http://eslint.org/docs/rules/no-labels
        "allowLoop": false,
        "allowSwitch": false
      }
    ],
    "no-lone-blocks": "error", // http://eslint.org/docs/rules/no-lone-blocks
    "no-loop-func": "error", // http://eslint.org/docs/rules/no-loop-func
    "no-magic-numbers": [
      "off",
      { // http://eslint.org/docs/rules/no-magic-numbers
        "ignore": [],
        "ignoreArrayIndexes": true,
        "enforceConst": true,
        "detectObjects": false
      }
    ],
    "no-multi-spaces": "error", // http://eslint.org/docs/rules/no-multi-spaces
    "no-multi-str": "error", // http://eslint.org/docs/rules/no-multi-str
    "no-new": "error", // http://eslint.org/docs/rules/no-new
    "no-new-func": "error", // http://eslint.org/docs/rules/no-new-func
    "no-new-wrappers": "error", // http://eslint.org/docs/rules/no-new-wrappers
    "no-octal": "error", // http://eslint.org/docs/rules/no-octal
    "no-octal-escape": "error", // http://eslint.org/docs/rules/no-octal-escape
    "no-param-reassign": [
      "error",
      { // http://eslint.org/docs/rules/no-param-reassign
        "props": false
      }
    ],
    "no-proto": "error", // http://eslint.org/docs/rules/no-proto
    "no-redeclare": "error", // http://eslint.org/docs/rules/no-redeclare
    "no-restricted-properties": [
      "error",
      { // http://eslint.org/docs/rules/no-restricted-properties
        "object": "arguments",
        "property": "callee",
        "message": "arguments.callee is deprecated"
      },
      {
        "property": "__defineGetter__",
        "message": "Please use Object.defineProperty instead."
      },
      {
        "property": "__defineSetter__",
        "message": "Please use Object.defineProperty instead."
      },
      {
        "object": "Math",
        "property": "pow",
        "message": "Use the exponentiation operator (**) instead."
      }
    ],
    "no-return-assign": "error", // http://eslint.org/docs/rules/no-return-assign
    "no-return-await": "error", // http://eslint.org/docs/rules/no-return-await
    "no-script-url": "error", // http://eslint.org/docs/rules/no-script-url
    "no-self-assign": "error", // http://eslint.org/docs/rules/no-self-assign
    "no-self-compare": "error", // http://eslint.org/docs/rules/no-self-compare
    "no-sequences": "error", // http://eslint.org/docs/rules/no-sequences
    "no-throw-literal": "error", // http://eslint.org/docs/rules/no-throw-literal
    "no-unmodified-loop-condition": "off", // http://eslint.org/docs/rules/no-unmodified-loop-condition
    "no-unused-expressions": [
      "error",
      { // http://eslint.org/docs/rules/no-unused-expressions
        "allowShortCircuit": false,
        "allowTernary": false
      }
    ],
    "no-unused-labels": "error", // http://eslint.org/docs/rules/no-unused-labels
    "no-useless-call": "off", // http://eslint.org/docs/rules/no-useless-call
    "no-useless-concat": "error", // http://eslint.org/docs/rules/no-useless-concat
    "no-useless-escape": "error", // http://eslint.org/docs/rules/no-useless-escape
    "no-useless-return": "error", // http://eslint.org/docs/rules/no-useless-return
    "no-void": "error", // http://eslint.org/docs/rules/no-void
    "no-warning-comments": [
      "warn",
      { // http://eslint.org/docs/rules/no-warning-comments
        "terms": [
          "todo",
          "fixme",
          "xxx"
        ],
        "location": "start"
      }
    ],
    "no-with": "error", // http://eslint.org/docs/rules/no-with
    "radix": "error", // http://eslint.org/docs/rules/radix
    "vars-on-top": "error", // http://eslint.org/docs/rules/vars-on-top
    "wrap-iife": [
      "error",
      "outside",
      { // http://eslint.org/docs/rules/wrap-iife
        "functionPrototypeMethods": false
      }
    ],
    "yoda": "error", // http://eslint.org/docs/rules/yoda
    ////////// Strict Mode //////////
    "strict": [
      "error",
      "never"
    ], // http://eslint.org/docs/rules/strict
    ////////// Variables //////////
    "init-declarations": "off", // http://eslint.org/docs/rules/init-declarations
    "no-catch-shadow": "off", // http://eslint.org/docs/rules/no-catch-shadow
    "no-delete-var": "error", // http://eslint.org/docs/rules/no-delete-var
    "no-label-var": "error", // http://eslint.org/docs/rules/no-label-var
    "no-restricted-globals": "off", // http://eslint.org/docs/rules/no-restricted-globals
    "no-shadow": "error", // http://eslint.org/docs/rules/no-shadow
    "no-shadow-restricted-names": "error", // http://eslint.org/docs/rules/no-shadow-restricted-names
    "no-undef": "error", // http://eslint.org/docs/rules/no-undef
    "no-undef-init": "error", // http://eslint.org/docs/rules/no-undef-init
    "no-undefined": "error", // http://eslint.org/docs/rules/no-undefined
    "no-unused-vars": [
      "error",
      { // http://eslint.org/docs/rules/no-unused-vars
        "vars": "local",
        "args": "after-used"
      }
    ],
    "no-use-before-define": "error", // http://eslint.org/docs/rules/no-use-before-define
    ////////// Node.js //////////
    "callback-return": "error", // http://eslint.org/docs/rules/callback-return
    "global-require": "error", // http://eslint.org/docs/rules/global-require
    "handle-callback-err": "error", // http://eslint.org/docs/rules/handle-callback-err
    "no-mixed-requires": [
      "off",
      false
    ], // http://eslint.org/docs/rules/no-mixed-requires
    "no-new-require": "error", // http://eslint.org/docs/rules/no-new-require
    "no-path-concat": "error", // http://eslint.org/docs/rules/no-path-concat
    "no-process-env": "off", // http://eslint.org/docs/rules/no-process-env
    "no-process-exit": "off", // http://eslint.org/docs/rules/no-process-exit
    "no-restricted-modules": "off", // http://eslint.org/docs/rules/no-restricted-modules
    "no-sync": "off", // http://eslint.org/docs/rules/no-sync
    ////////// Stylistic Issues //////////
    "array-bracket-spacing": [
      "error",
      "never"
    ], // http://eslint.org/docs/rules/array-bracket-spacing
    "block-spacing": [
      "error",
      "always"
    ], // http://eslint.org/docs/rules/block-spacing
    "brace-style": [
      "error",
      "1tbs",
      { // http://eslint.org/docs/rules/brace-style
        "allowSingleLine": true
      }
    ],
    "camelcase": [
      "error",
      { // http://eslint.org/docs/rules/camelcase
        "properties": "never"
      }
    ],
    "comma-spacing": [
      "error",
      { // http://eslint.org/docs/rules/comma-spacing
        "before": false,
        "after": true
      }
    ],
    "comma-style": [
      "error",
      "last"
    ], // http://eslint.org/docs/rules/comma-style
    "computed-property-spacing": [
      "error",
      "never"
    ], // http://eslint.org/docs/rules/computed-property-spacing
    "consistent-this": "off", // http://eslint.org/docs/rules/consistent-this
    "eol-last": [
      "error",
      "always"
    ], // http://eslint.org/docs/rules/eol-last
    "func-call-spacing": [
      "error",
      "never"
    ], // http://eslint.org/docs/rules/func-call-spacing
    "func-name-matching": [
      "off",
      "always",
      { // http://eslint.org/docs/rules/func-name-matching
        "includeCommonJSModuleExports": false
      }
    ],
    "func-names": "error", // http://eslint.org/docs/rules/func-names
    "func-style": [
      "error",
      "expression"
    ], // http://eslint.org/docs/rules/func-style
    "id-blacklist": "off", // http://eslint.org/docs/rules/id-blacklist
    "id-length": "off", // http://eslint.org/docs/rules/id-length
    "id-match": "off", // http://eslint.org/docs/rules/id-match
    "indent": [
      "error",
      2,
      { // http://eslint.org/docs/rules/indent
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "outerIIFEBody": 1,
        "FunctionDeclaration": {
          "parameters": 1,
          "body": 1
        },
        "FunctionExpression": {
          "parameters": 1,
          "body": 1
        }
      }
    ],
    "jsx-quotes": [
      "error",
      "prefer-double"
    ], // http://eslint.org/docs/rules/jsx-quotes
    "key-spacing": [
      "error",
      { // http://eslint.org/docs/rules/key-spacing
        "beforeColon": false,
        "afterColon": true
      }
    ],
    "keyword-spacing": [
      "error",
      { // http://eslint.org/docs/rules/keyword-spacing
        "before": true,
        "after": true,
        "overrides": {
          "return": {
            "after": true
          },
          "throw": {
            "after": true
          },
          "case": {
            "after": true
          }
        }
      }
    ],
    "linebreak-style": [
      "error",
      "unix"
    ], // http://eslint.org/docs/rules/linbreak-style
    "lines-around-comment": "off", // http://eslint.org/docs/rules/lines-around-comment
    "lines-around-directive": [
      "error",
      { // http://eslint.org/docs/rules/lines-around-directive
        "before": "always",
        "after": "always"
      }
    ],
    "max-depth": [
      "off",
      4
    ], // http://eslint.org/docs/rules/max-depth
    "max-len": [
      "error",
      85,
      2,
      { // http://eslint.org/docs/rules/max-len
        "ignoreUrls": true,
        "ignoreComments": false,
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true
      }
    ],
    "max-lines": [
      "off",
      { // http://eslint.org/docs/rules/max-lines
        "max": 300,
        "skipBlankLines": true,
        "skipComments": true
      }
    ],
    "max-nested-callbacks": "off", // http://eslint.org/docs/rules/max-nested-callbacks
    "max-params": [
      "off",
      3
    ], // http://eslint.org/docs/rules/max-params
    "max-statements": [
      "off",
      10
    ], // http://eslint.org/docs/rules/max-statements
    "max-statements-per-line": [
      "error",
      { // http://eslint.org/docs/rules/max-statements-per-line
        "max": 1
      }
    ],
    "multiline-ternary": [
      "off",
      "never"
    ], // http://eslint.org/docs/rules/multiline-ternary
    "new-cap": [
      "error",
      { // http://eslint.org/docs/rules/new-cap
        "newIsCap": true,
        "newIsCapExceptions": [],
        "capIsNew": false
      }
    ],
    "new-parens": "error", // http://eslint.org/docs/rules/new-parens
    "newline-after-var": "off", // http://eslint.org/docs/rules/newline-after-var
    "newline-before-return": "off", // http://eslint.org/docs/rules/newline-before-return
    "newline-per-chained-call": [
      "error",
      { // http://eslint.org/docs/rules/newline-per-chained-call
        "ignoreChainWithDepth": 4
      }
    ],
    "no-array-constructor": "error", // http://eslint.org/docs/rules/no-array-constructor
    "no-bitwise": "error", // http://eslint.org/docs/rules/no-bitwise
    "no-continue": "error", // http://eslint.org/docs/rules/no-continue
    "no-inline-comments": "error", // http://eslint.org/docs/rules/no-inline-comments
    "no-lonely-if": "error", // http://eslint.org/docs/rules/no-lonely-if
    "no-mixed-operators": [
      "error",
      { // http://eslint.org/docs/rules/no-mixed-operators
        "groups": [
          [
            "+",
            "-",
            "*",
            "/",
            "%",
            "**"
          ],
          [
            "&",
            "|",
            "^",
            "~",
            "<<",
            ">>",
            ">>>"
          ],
          [
            "==",
            "!=",
            "===",
            "!==",
            ">",
            ">=",
            "<",
            "<="
          ],
          [
            "&&",
            "||"
          ],
          [
            "in",
            "instanceof"
          ]
        ],
        "allowSamePrecedence": false
      }
    ],
    "no-mixed-spaces-and-tabs": "error", // http://eslint.org/docs/rules/no-mixed-spaces-and-tabs
    "no-multiple-empty-lines": [
      "error",
      { // http://eslint.org/docs/rules/no-multiple-empty-lines
        "max": 2,
        "maxEOF": 1
      }
    ],
    "no-unsafe-negation": "off", // http://eslint.org/docs/rules/no-unsafe-negation
    "no-nested-ternary": "error", // http://eslint.org/docs/rules/no-nested-ternary
    "no-new-object": "error", // http://eslint.org/docs/rules/no-new-object
    "no-plusplus": "error", // http://eslint.org/docs/rules/no-plusplus
    "no-restricted-syntax": [ // http://eslint.org/docs/rules/no-restricted-syntax
      "error",
      "ForInStatement",
      "ForOfStatement",
      "LabeledStatement",
      "WithStatement"
    ],
    "no-spaced-func": "error", // http://eslint.org/docs/rules/no-spaced-func
    "no-tabs": "error", // http://eslint.org/docs/rules/no-tabs
    "no-ternary": "off", // http://eslint.org/docs/rules/no-ternary
    "no-trailing-spaces": "error", // http://eslint.org/docs/rules/no-trailing-spaces
    "no-underscore-dangle": "off", // http://eslint.org/docs/rules/no-underscore-dangle
    "no-unneeded-ternary": [
      "error",
      { // http://eslint.org/docs/rules/no-unneeded-assignment
        "defaultAssignment": false
      }
    ],
    "no-whitespace-before-property": "error", // http://eslint.org/docs/rules/no-whitespace-before-property
    "object-curly-spacing": [
      "error",
      "always"
    ], // http://eslint.org/docs/rules/object-curly-spacing
    "object-curly-newline": [
      "off",
      { // http://eslint.org/docs/rules/object-curly-newline
        "ObjectExpression": {
          "minProperties": 0,
          "multiline": true
        },
        "ObjectPattern": {
          "minProperties": 0,
          "multiline": true
        }
      }
    ],
    "object-property-newline": [
      "error",
      { // http://eslint.org/docs/rules/object-property-newline
        "allowMultiplePropertiesPerLine": true
      }
    ],
    "one-var": [
      "error",
      "never"
    ], // http://eslint.org/docs/rules/one-var
    "one-var-declaration-per-line": [
      "error",
      "always"
    ], // http://eslint.org/docs/rules/one-var-declaration-per-line
    "operator-assignment": [
      "error",
      "always"
    ], // http://eslint.org/docs/rules/operator-assignment
    "operator-linebreak": [
      "error",
      "after",
      { // http://eslint.org/docs/rules/operator-linebreak
        "overrides": {
          "?": "before",
          ":": "before"
        }
      }
    ],
    "padded-blocks": [
      "error",
      "never"
    ], // http://eslint.org/docs/rules/padded-blocks
    "quote-props": [
      "error",
      "as-needed",
      { // http://eslint.org/docs/rules/quote-props
        "keywords": false,
        "unnecessary": true,
        "numbers": false
      }
    ],
    "quotes": [
      "error",
      "single",
      { // http://eslint.org/docs/rules/quotes
        "avoidEscape": true
      }
    ],
    "require-jsdoc": "off", // http://eslint.org/docs/rules/require-jsdoc
    "semi": [
      "error",
      "always"
    ], // http://eslint.org/docs/rules/semi
    "semi-spacing": [
      "error",
      { // http://eslint.org/docs/rules/semi-spacing
        "before": false,
        "after": true
      }
    ],
    "sort-keys": [
      "off",
      "asc",
      { // http://eslint.org/docs/rules/sort-keys
        "caseSensitive": false,
        "natural": true
      }
    ],
    "sort-vars": "off", // http://eslint.org/docs/rules/sort-vars
    "space-before-blocks": "error", // http://eslint.org/docs/rules/space-before-blocks
    "space-before-function-paren": [
      "error",
      "never"
    ], // http://eslint.org/docs/rules/space-before-function-paren
    "space-in-parens": [
      "error",
      "never"
    ], // http://eslint.org/docs/rules/space-in-parens
    "space-infix-ops": "error", // http://eslint.org/docs/rules/space-infix-ops
    "space-unary-ops": [
      "error",
      { // http://eslint.org/docs/rules/space-unary-ops
        "words": true,
        "nonwords": false,
        "overrides": {}
      }
    ],
    "spaced-comment": [
      "error",
      "always",
      { // http://eslint.org/docs/rules/spaced-comment
        "line": {
          "exceptions": [
            "-",
            "+"
          ],
          "markers": [
            "=",
            "!"
          ]
        },
        "block": {
          "exceptions": [
            "-",
            "+"
          ],
          "markers": [
            "=",
            "!"
          ],
          "balanced": false
        }
      }
    ],
    "unicode-bom": [
      "error",
      "never"
    ], // http://eslint.org/docs/rules/unicode-bom
    "wrap-regex": "off", // http://eslint.org/docs/rules/wrap-regex
    ////////// ECMAScript 6 //////////
    "arrow-body-style": [
      "error",
      "as-needed",
      { // http://eslint.org/docs/rules/arrow-body-style
        "requireReturnForObjectLiteral": false
      }
    ],
    "arrow-parens": [
      "error",
      "as-needed",
      { // http://eslint.org/docs/rules/arrow-parens
        "requireForBlockBody": false
      }
    ],
    "arrow-spacing": [
      "error",
      { // http://eslint.org/docs/rules/arrow-spacing
        "before": true,
        "after": true
      }
    ],
    "constructor-super": "error", // http://eslint.org/docs/rules/constructor-super
    "generator-star-spacing": [
      "error",
      { // http://eslint.org/docs/rules/generator-star-spacing
        "before": false,
        "after": true
      }
    ],
    "no-class-assign": "error", // http://eslint.org/docs/rules/no-class-assign
    "no-confusing-arrow": [
      "error",
      { // http://eslint.org/docs/rules/no-confusing-arrow
        "allowParens": true
      }
    ],
    "no-const-assign": "error", // http://eslint.org/docs/rules/no-const-assign
    "no-dupe-class-members": "error", // http://eslint.org/docs/rules/no-dupe-class-members
    "no-duplicate-imports": "error", // http://eslint.org/docs/rules/no-duplicate-imports
    "no-new-symbol": "error", // http://eslint.org/docs/rules/no-new-symbol
    "no-restricted-imports": "off", // http://eslint.org/docs/rules/no-restricted-imports
    "no-this-before-super": "error", // http://eslint.org/docs/rules/no-this-before-super
    "no-useless-computed-key": "error", // http://eslint.org/docs/rules/no-useless-computed-key
    "no-useless-constructor": "error", // http://eslint.org/docs/rules/no-useless-constructor
    "no-useless-rename": [
      "error",
      { // http://eslint.org/docs/rules/no-useless-rename
        "ignoreDestructuring": false,
        "ignoreImport": false,
        "ignoreExport": false
      }
    ],
    "no-var": "error", // http://eslint.org/docs/rules/no-var
    "object-shorthand": [
      "error",
      "always",
      { // http://eslint.org/docs/rules/object-shorthand
        "ignoreConstructors": false,
        "avoidQuotes": true
      }
    ],
    "prefer-arrow-callback": [
      "error",
      { // http://eslint.org/docs/rules/prefer-arrow-callback
        "allowNamedFunctions": false,
        "allowUnboundThis": true
      }
    ],
    "prefer-const": [
      "error",
      { // http://eslint.org/docs/rules/prefer-const
        "destructuring": "all",
        "ignoreReadBeforeAssign": true
      }
    ],
    "prefer-rest-params": "error", // http://eslint.org/docs/rules/prefer-rest-params
    "prefer-spread": "error", // http://eslint.org/docs/rules/prefer-spread
    "prefer-template": "error", // http://eslint.org/docs/rules/prefer-template
    "require-yield": "error", // http://eslint.org/docs/rules/require-yield
    "rest-spread-spacing": [
      "error",
      "never"
    ], // http://eslint.org/docs/rules/rest-spread-spacing
    "sort-imports": [
      "off",
      { // http://eslint.org/docs/rules/sort-imports
        "ignoreCase": false,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": [
          "none",
          "all",
          "multiple",
          "single"
        ]
      }
    ],
    "symbol-description": "error", // http://eslint.org/docs/rules/symbol-description
    "template-curly-spacing": "error", // http://eslint.org/docs/rules/template-curly-spacing
    "yield-star-spacing": [
      "error",
      "after"
    ] // http://eslint.org/docs/rules/yield-star-spacing
  }
}